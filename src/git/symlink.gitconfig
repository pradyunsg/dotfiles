[alias]
  # One Character Shorthands
  b = "!f() { git for-each-ref --color=always --sort='-committerdate:iso8601' --format='%(committerdate:relative)|%(objectname:short)|%(color:green)%(HEAD)%(color:reset) %(refname:short)' refs/heads | column -s '|' -t; }; f"
  c = commit
  d = diff  --color-words
  g = graph
  k = !gitk
  l = log --graph --date=short
  s = !git st

  # Two Character Shorthands
  cl = clone                    # clone
  br = branch                   # branch
  co = switch                   # checkout, but only to branches
  nb = checkout -b              # new branch
  st = status -sb               # status in a concise manner
  cp = cherry-pick              # cherry-pick is very log
  # history of current HEAD
  ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate

  # Nice log graph
  graph = log --graph --oneline

  # git-tools should open through git
  visual = cola

  # I forget too easily.
  stage = add
  unstage = reset HEAD --

  undo = reset --soft HEAD~1    # undo your last commit
  amend = commit --amend        # amend your last commit

  diffc = diff --cached
  pushf = push --force
  pushit = push -u origin HEAD

  whatadded = log --diff-filter=A  # which commit added this file
  fixup = commit --fixup

[apply]
  whitespace = error

[commit]
  gpgsign = true

[core]
  attributesfile = ~/.gitattributes
  excludesfile = ~/.gitignore
  autocrlf = input
  editor = code -w
  whitespace = trailing-space,cr-at-eol

[diff]
  algorithm = patience
  tool = meld

[gui]
  editor = code -w

[help]
  autocorrect = 20

[merge]
  tool = meld
  conflictstyle = diff3

[push]
  default = simple

[pull]
  ff = only

[user]
  useConfigOnly = true

[init]
  defaultBranch = main

[include]
  path = ~/.gitconfig.local

# Pro-tip: Makes life with submodules easier.
# [url "git@github.com:yourname/"]
#   insteadOf = "git://github.com/yourname/"
