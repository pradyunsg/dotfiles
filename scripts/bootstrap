#!/usr/bin/env bash

# This file is designed to set up a machine for development. Everything MUST be
# idempotent, meaning that rerunning this file should still result in the same
# state of the machine. Notable, it should be possible to run this on a
# partially set up machine and get to a working state.

# Make debugging things easier.
if [[ $1 == "--verbose" ]]; then
  set -x
fi
set -e


function brew_install_cask_if_not_installed() {
  local app_name="$1"
  local cask_name="$2"
  if ! mdfind -name "$app_name" | grep -q "$app_name"; then
    echo "Installing $app_name (via brew cask $cask_name)..."
    brew install --cask "$cask_name"
  fi
  echo "âœ… $app_name"
}

DOTFILES_REPO_ROOT="$(cd "$(dirname "$(dirname "${BASH_SOURCE[0]}")")" &> /dev/null && pwd)"

if grep -q docker /proc/1/cgroup 2> /dev/null; then
  echo "This is a Docker container!"
  echo

  exit 1
elif [[ "$OSTYPE" == "darwin"* ]]; then
  echo "This is a MacBook!"
  echo

  # Install Homebrew, if it is not installed.
  if ! which -s brew; then
    echo "Installing Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  fi
  echo -e "\033[32mHomebrew is installed!\033[0m"

  brew bundle --file $DOTFILES_REPO_ROOT/Brewfile --no-lock

  code \
    --install-extension ms-python.python \
    --install-extension ms-vscode.sublime-keybindings \
    --install-extension ms-vsliveshare.vsliveshare \
    --install-extension matklad.rust-analyzer \
    --install-extension sdras.night-owl
  echo -e "\033[32mVisual Studio Code extensions are installed!\033[0m"

elif [[ "$(uname -s)" == "Linux" ]]; then
  echo "This is a Linux Machine!"
  echo

  exit 1
else
  echo -ne "\n\n\e[31mERROR: Not sure how to set up this machine!\e[0m\n\n"
  exit 1
fi

# Create Python virtual environment for running `scripts/setup`.
if [[ ! -d .venv ]]; then
  /usr/bin/python3 -m venv .venv --upgrade
  .venv/bin/pip install wheel
  .venv/bin/pip install -r $DOTFILES_REPO_ROOT/requirements.txt
fi

# Create a ~/.dotfiles.toml, if it doesn't exist.
CONFIG_FILE=~/.dotfiles.toml
if [[ ! -f "$CONFIG_FILE" ]]; then
  echo -e "[repositories]\npersonal = \"$(realpath $DOTFILES_REPO_ROOT)\"" > $CONFIG_FILE
fi

$DOTFILES_REPO_ROOT/scripts/setup
